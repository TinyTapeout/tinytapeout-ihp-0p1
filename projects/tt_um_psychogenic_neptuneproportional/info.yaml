---
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here.
# Source files must be in ./src and you must list each source file separately
  source_files:
    - neptune_tinytapeout_propwindow.v
  top_module:  "tt_um_psychogenic_neptuneproportional"      # put the name of your top module here, make it unique by prepending your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation:
  author:       "Pat Deegan"
  title:        "Neptune guitar tuner (proportional window, version b, debug output on bidir pins, larger set of frequencies)"
  language:     "Verilog"
  description:  "It's a guitar tuner!  and so much more... "

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
     The rising edge of the input is counted over a set period of time
     and attempt is made to tell if this count is at, or near, a
     frequency of interest--namely the E,A,D,G,B notes of guitar
     standard tuning.
     In this version, the system should be capable of detecting:
     E2,A2,A3,B3,D3,E3,G3,D4,E4 and G4 so from about ~80 to 400 Hz.
     Clock config settings (using 3 input bits)
      0: 1kHz
      1: 2kHz
      2: 4kHz
      3: 3.277kHz
      4: 10 kHz
      5: 32.768kHz
      6: 40kHz
      7: 60kHz

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Set the clocking bits to 0b000 for a 1kHz clock input (input bits
      2,3 and 4).
      Input pulses are fed to input bit 5.  The raw count of pulses over
      the sampling period (hard-coded here to 0.5 seconds) is output on
      the bidir pins.  The output is setup to drive a dual 7-segment display, or a single 7-segment (by using the output_display bits on
      the input).  In single mode, the 7-seg dot marks exact match.

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:
    - n/a
    - n/a
    - clk config 0
    - clk config 1
    - clk config 2
    - input pulse
    - output display single enable (LOW == dual)
    - output display select

# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - segment a
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - dot or select (for dual)
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - raw input pulse count bit 0
    - raw input pulse count bit 1
    - raw input pulse count bit 2
    - raw input pulse count bit 3
    - raw input pulse count bit 4
    - raw input pulse count bit 5
    - raw input pulse count bit 6
    - raw input pulse count bit 7

# The following fields are optional
  tag:          "timer, test"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "Digital input required: may need massaging if looking at actual guitar signals... see documentation"      # Describe any external hardware needed
  discord:      "psychogenictech"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     "https://inductive-kickback.com/projects/neptune/"      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     1000    # Clock frequency in Hz (if required)
  picture:      "img/neptune.png"      # relative path to a picture in your repository
